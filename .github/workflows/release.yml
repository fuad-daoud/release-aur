name: Release

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25.3"
          cache: true

      - name: Run tests
        run: go test -v ./...

      - name: Build binaries
        run: |
          GOOS=linux GOARCH=amd64 go build -o release-aur-linux-amd64 .

      - name: Validate action.yml
        run: |
          echo "Validating action.yml structure..."

          # Check required fields
          if ! grep -q "^name:" action.yml; then
            echo "ERROR: Missing 'name' field"
            exit 1
          fi

          if ! grep -q "^description:" action.yml; then
            echo "ERROR: Missing 'description' field"
            exit 1
          fi

          if ! grep -q "^author:" action.yml; then
            echo "ERROR: Missing 'author' field"
            exit 1
          fi

          if ! grep -q "^branding:" action.yml; then
            echo "ERROR: Missing 'branding' section"
            exit 1
          fi

          echo "✓ action.yml validation passed"

      - name: Check for workflow files
        run: |
          # Marketplace requires no workflow files in root
          if ls *.yml 2>/dev/null | grep -v "action.yml" | grep -v "action.yaml"; then
            echo "WARNING: Found workflow files in root. These should be in .github/workflows/"
          fi
          echo "✓ No conflicting workflow files in root"

      - name: Generate checksums
        run: |
          sha256sum release-aur-* > checksums.txt
          cat checksums.txt

      - name: Extract release notes
        id: extract_notes
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Release $VERSION" > release_notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release-aur-*
            checksums.txt
          body_path: release_notes.md
          draft: false
          prerelease: false

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
